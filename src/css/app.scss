// app global css in SCSS form

.header {
  min-height: 100%;

  max-height: 5vh;
  @media screen and (orientation: portrait) {
    max-height: 5vw;
  }
}

.footerArea {
  grid-area: footer;
}

.controlsArea {
  grid-area: controls;
  flex-wrap: nowrap;
  max-width: 50%;
}

.settingsArea {
  grid-area: settings;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.tileTreeArea {
  grid-area: tiles;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.snapshotImage {
  height: 5vw;
  @media screen and (orientation: portrait) {
    height: 5vh;
  }
  max-height: 100px;
}

.unselectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.canvasArea {
  position: relative;
  background-color: lighten(lightgray, 15%);
  justify-content: stretch;
  grid-area: canvas;
  border: 1px solid lightgray;
  border-width: 0px 2px;
  border-image: linear-gradient(to bottom, lightgray, rgba(0, 0, 0, 0)) 1 100%;
}

.canvasHeader {
  position: relative;
  background-color: lighten(lightgray, 15%);
  justify-content: stretch;
  grid-area: canvasHeader;
  border: 1px solid lightgray;
  border-width: 0px 2px;
  border-image: linear-gradient(to bottom, lightgray, rgba(0, 0, 0, 0)) 1 100%;
}

.canvasHolder {
  position: absolute;
  margin: auto;
  left: 8px;
  right: 8px;
  top: 8px;
  bottom: 8px;
  max-width: 98%;
  max-height: 98%;
  border: 4px solid lightgray;
}

canvas {
  width: 100%;
  height: 100%;
  image-rendering: pixelated;
  position: absolute;
}

.mainGrid {
  position: relative;
  height: 95vh;
  width: 100vw;
  @media screen and (orientation: portrait) {
    height: 95vw;
    width: 100vh;
  }
  display: grid;
  grid-template-columns: minmax(150px, 0.75fr) 2fr minmax(200px, 1fr);
  grid-template-rows: 1fr 0.2fr 32px;
  grid-template-areas:
    "settings canvas  tiles"
    "settings controls tiles"
    "footer footer footer";
}

.inputGrid {
  position: relative;
  height: 95vh;
  width: 100vw;
  @media screen and (orientation: portrait) {
    height: 95vw;
    width: 100vh;
  }
  display: grid;
  grid-template-columns: minmax(150px, 0.75fr) 2fr minmax(200px, 1fr);
  grid-template-rows: 0.05fr 1fr 0.2fr 32px;
  grid-template-areas:
    "settings canvasHeader tiles"
    "settings canvas  tiles"
    "settings controls tiles"
    "footer footer footer";
}

.q-tree__node-header:has(div > .selectedtree) {
  background-color: lighten($primary, 30);
  transition: background-color 0.5s;
  // cursor: crosshair;
}
.selectedtree {
  color: $yellow-10;
}
.q-tree__node-header:has(div > .selectedlayer) {
  // background-color: lighten($yellow-10, 30);
  transition: background-color 0.5s;
  box-shadow: 0px 0px 0px 2px $yellow-10;
  // border: 2px solid $yellow-10;  // Border messes up the layout
  // cursor: crosshair;
}
.selectedlayer {
  color: lighten($purple, 20);
  // border-bottom: 2px solid $yellow-10;
}

.selectedlayer::after {
  content: "EDITING LAYER";
  padding-left: 10px;
  color: $yellow-10;
  font-weight: 1000;
}
.prb0:after {
  content: "";
  background-image: url("/minusminus.svg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: 100%;
  position: absolute;
  width: 48px;
  height: 16px;
  right: 0px;
}
.prb1:after {
  content: "";
  background-image: url("/minus.svg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: 100%;
  position: absolute;
  width: 48px;
  height: 16px;
  right: 0px;
}

.prb2:after {
  content: "";
  background-image: url("/neutral.svg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: 100%;
  position: absolute;
  width: 48px;
  height: 16px;
  right: 0px;
}

.prb3:after {
  content: "";
  background-image: url("/plus.svg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: 100%;
  position: absolute;
  width: 48px;
  height: 16px;
  right: 0px;
}

.prb4:after {
  content: "";
  background-image: url("/plusplus.svg");
  background-position: center;
  background-repeat: no-repeat;
  background-size: 100%;
  position: absolute;
  width: 48px;
  height: 16px;
  right: 0px;
}

html,
body {
  overscroll-behavior: none;
  // overflow: hidden;
}

.buttonToggleMW {
  flex-wrap: wrap;
}

.buttonToggleMW > button {
  min-width: 32px !important;
}

.buttonToggleUnallocated {
  flex-wrap: wrap;
}

.buttonToggleUnallocated > button {
  width: 48px;
  height: 48px;
  padding: 0px;
  min-width: 0px;
  min-height: 0px;
}

.buttonToggleTools {
  flex-wrap: wrap;
}

.buttonToggleTools > button {
  width: 32px;
  height: 32px;
  padding: 0px;
  min-width: 0px;
  min-height: 0px;
}

@media screen and (orientation: portrait) {
  html {
    transform: rotate(-90deg);
    transform-origin: left top;
    width: 100vh;
    height: 100vw;
    overflow: hidden;
    position: absolute;
    top: 100%;
    left: 0;
  }
}

.active-layer {
  color: white;
  background: $primary;
}

.disabledroot {
  filter: grayscale(1);
  cursor: not-allowed;
}
