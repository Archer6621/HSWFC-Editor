// app global css in SCSS form

.toolbarArea {
  grid-area: header;
}

.footerArea {
  grid-area: footer;
}

.controlsArea {
  grid-area: controls;
  flex-wrap: nowrap;
  max-width: 50%;
}

.settingsArea {
  grid-area: settings;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.tileTreeArea {
  grid-area: tiles;
  overflow: hidden;
  display: flex;
  flex-direction: column;
}

.snapshotImage {
  height: 5vw;
  @media screen and (orientation: portrait) {
    height: 5vh;
  }
  max-height: 100px;
}

.unselectable {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

.canvasArea {
  position: relative;
  background-color: lighten(lightgray, 15%);
  justify-content: stretch;
  grid-area: canvas;
  border: 1px solid lightgray;
  border-width: 0px 2px;
  border-image: linear-gradient(to bottom, lightgray, rgba(0, 0, 0, 0)) 1 100%;
}

.canvasHolder {
  position: absolute;
  margin: auto;
  left: 8px;
  right: 8px;
  top: 8px;
  bottom: 8px;
  max-width: 98%;
  max-height: 98%;
  border: 4px solid lightgray;
}

canvas {
  width: 100%;
  height: 100%;
  image-rendering: pixelated;
  position: absolute;
}

.mainGrid {
  position: relative;
  height: 100vh;
  width: 100vw;
  @media screen and (orientation: portrait) {
    height: 100vw;
    width: 100vh;
  }
  display: grid;
  grid-template-columns: minmax(150px, 0.75fr) 2fr minmax(200px, 1fr);
  grid-template-rows: auto 1fr 0.2fr 32px;
  grid-template-areas:
    "header header  header"
    "settings canvas  tiles"
    "settings controls tiles"
    "footer footer  footer";
}

.q-tree__node-header:has(div > .selectedtree) {
  background-color: lighten($primary, 30);
  transition: background-color 0.5s;
  // cursor: crosshair;
}
.selectedtree {
  color: $yellow-10;
}

.prb:after {
  content: "";
  background-position: center;
  background-repeat: no-repeat;
  background-size: 90%;
  position: absolute;
  width: 48px;
  height: 16px;
  bottom: 10px;
  left: 0px;
  right: 0px;
  margin: auto;
}

.prb0:after {
  background-image: url("./minusminus.svg");
}
.prb1:after {
  background-image: url("./minus.svg");
}

.prb2:after {
  background-image: url("./neutral.svg");
}

.prb3:after {
  background-image: url("./plus.svg");
}

.prb4:after {
  background-image: url("./plusplus.svg");
}

html,
body {
  overscroll-behavior: none;
  overflow: hidden;
}

.buttonToggleMW {
  flex-wrap: wrap;
}

.buttonToggleMW > button {
  min-width: 32px !important;
}

@media screen and (orientation: portrait) {
  html {
    transform: rotate(-90deg);
    transform-origin: left top;
    width: 100vh;
    height: 100vw;
    overflow: hidden;
    position: absolute;
    top: 100%;
    left: 0;
  }
}
